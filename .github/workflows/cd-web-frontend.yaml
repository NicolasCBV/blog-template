name: Web Front-end CD

env:
  CLIENT_URL: ${{secrets.CLIENT_URL}}
  PORT: ${{secrets.PORT}}
  TOKEN_SECRET: ${{secrets.TOKEN_SECRET}}
  DATABASE_URL: ${{secrets.DATABASE_URL}}
  CACHE_HOSTNAME: ${{secrets.CACHE_HOSTNAME}}
  CACHE_PASSWORD: ${{secrets.CACHE_PASSWORD}}
  FIREBASE: ${{secrets.FIREBASE}}
  FIREBASE_TEMPLATE_IMAGE_LINK: ${{secrets.FIREBASE_TEMPLATE_IMAGE_LINK}}
  FIREBASE_BUCKET: ${{secrets.FIREBASE_BUCKET}}
  VERCEL_PROJECT_ID: ${{secrets.VERCEL_PROJECT_ID}}
  VERCEL_ORG_ID: ${{secrets.VERCEL_ORG_ID}}
  NODE_ENV: ${{secrets.NODE_ENV}}
  SERVER_URL: ${{secrets.SERVER_URL}}
  ADMIN_SERVER_URL: ${{secrets.ADMIN_SERVER_URL}}
  NEXT_PUBLIC_DOMAIN: ${{secrets.NEXT_PUBLIC_DOMAIN}}
  NEXT_PUBLIC_ALGOLIA_APP_ID: ${{secrets.NEXT_PUBLIC_ALGOLIA_APP_ID}}
  NEXT_PUBLIC_ALGOLIA_SEARCH_KEY: ${{secrets.NEXT_PUBLIC_ALGOLIA_SEARCH_KEY}}
  NEXT_PUBLIC_FIREBASE_TEMPLATE_IMAGE_LINK: ${{secrets.NEXT_PUBLIC_FIREBASE_TEMPLATE_IMAGE_LINK}}
  NEXT_PUBLIC_API_KEY: ${{secrets.NEXT_PUBLIC_API_KEY}}
  NEXT_PUBLIC_AUTH_DOMAIN: ${{secrets.NEXT_PUBLIC_AUTH_DOMAIN}}
  NEXT_PUBLIC_PROJECT_ID: ${{secrets.NEXT_PUBLIC_PROJECT_ID}}
  NEXT_PUBLIC_STORAGE_BUCKET: ${{secrets.NEXT_PUBLIC_STORAGE_BUCKET}}
  NEXT_PUBLIC_MESSAGING_SENDER_ID: ${{secrets.NEXT_PUBLIC_MESSAGING_SENDER_ID}}
  NEXT_PUBLIC_APP_ID: ${{secrets.NEXT_PUBLIC_APP_ID}}
  NEXT_PUBLIC_MEASUREMENT_ID: ${{secrets.NEXT_PUBLIC_MEASUREMENT_ID}}

defaults:
  run:
    working-directory: client/web

on:
  push:
    branches: [ "master" ]
    paths:
      - "client/web/**"

jobs:
  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node-version}}
          cache: "pnpm"
          cache-dependency-path: backend/pnpm-lock.yaml
      
      - name: Install dependencies
        run: pnpm install
      - name: Unit test & E2E test
        run: pnpm run test && pnpm run test:e2e

  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client/web
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node-version}}
          cache: "pnpm"
          cache-dependency-path: client/web/pnpm-lock.yaml
      
      - name: Install dependencies
        run: pnpm install
      - name: Unit test
        run: pnpm run test

  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client/web
    needs: [test-frontend, test-backend]
    steps:
      - uses: actions/checkout@v2

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Dependencies again
        run: pnpm install

      - name: Pull Vercel Environment Information
        run: pnpm vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: pnpm vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: pnpm vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
